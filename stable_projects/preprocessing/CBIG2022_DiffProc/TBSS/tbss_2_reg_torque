#!/bin/sh

#   tbss_2_reg - TBSS nonlinear registration
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2005-2008 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 5.0 (c) 2012, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Oxford
#   University Innovation ("OUI"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   Innovation@innovation.ox.ac.uk quoting reference DE/9564.
export LC_ALL=C

Usage() {
    cat <<EOF

Usage: tbss_2_reg [options]

Target-selection options - choose ONE of:
 -T            : use FMRIB58_FA_1mm as target for nonlinear registrations (recommended)
 -t <target>   : use <target> image as target for nonlinear registrations
 -n            : find best target from all images in FA

EOF
    exit 1
}

do_reg(){

    f=$1

    for g in `$FSLDIR/bin/imglob *_FA.*` ; do
        	
	o=${g}_to_$f
	wd=$(pwd) # append working directory to command file
	if [ ! -f ${o}_warp.msf ] ; then
	    echo $o
	    touch ${o}_warp.msf
	    echo "$FSLDIR/bin/fsl_reg $wd/$g $wd/$f $wd/${g}_to_$f -e -FA" >> .commands
	fi
	
    done
}

[ "$1" = "" ] && Usage

echo [`date`] [`hostname`] [`uname -a`] [`pwd`] [$0 $@] >> .tbsslog

#/bin/rm -f FA/.commands

# exit if tbss directory not set up
if [ ! -d "$tbssdir" ]; then
	echo "ERROR: tbss directory not found..."
	exit 1
fi

if [ $1 = -n ] ; then
    cd FA
    for f in `$FSLDIR/bin/imglob *_FA.*` ; do
	do_reg $f
    done
else
    if [ $1 = -T ] ; then
	TARGET=$FSLDIR/data/standard/FMRIB58_FA_1mm
    elif [ $1 = -t ] ; then
	TARGET=$2
    else
	Usage
    fi
    if [ `${FSLDIR}/bin/imtest $TARGET` = 0 ] ; then
	echo ""
	echo "Error: target image $TARGET not valid"
	Usage
    fi
    $FSLDIR/bin/imcp $TARGET FA/target
    cd FA
    do_reg target
fi

# submit jobs to scheduler
jobname='tbss_2_reg'
jobs2run=$(cat .commands | wc -l)

while IFS= read -r cmd; do
	# extract subject names for mat files
	matfile="$(echo $cmd | grep -oP '/FA/\K.*?(?=_FA )')_FA_to_target.mat"
	# check if registration mat file exists - if it does do not run
	if [ -e $matfile ]; then
		echo "$matfile exists: skipping processing"
	else
		#run command
		ssh headnode "$CBIG_CODE_DIR/setup/CBIG_pbsubmit -cmd '$cmd' -walltime 01:00:00 \
			-name $jobname -mem 3GB -joberr '$tbssdir' -jobout '$tbssdir'" < /dev/null
	fi
done < .commands

# wait until all jobs run: counted by username and job name
echo "Waiting for all jobs to complete before moving on..."
user_id=$( whoami )
running_jobs=$( ssh headnode "qselect -u $user_id -N $jobname | wc -l" )
start=$SECONDS
while [ $running_jobs -gt 0 ]; do
	duration_min=$((( $SECONDS - $start ) / 60))
	echo "	${duration_min}m: $running_jobs jobs  still running"
	sleep 1m
	running_jobs=$( ssh headnode "qselect -u $user_id -N $jobname | wc -l" )
done

mkdir -p scheduler_logs
mv $tbssdir/*.headnode.* $tbssdir/FA/scheduler_logs

